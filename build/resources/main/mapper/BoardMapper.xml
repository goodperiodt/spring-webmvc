<!--이 파일이 mybatis의 mapper로 사용된다는 일종의 선언-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mapper 태그의 속성인 namespace의 값에 구현하고자 하는 클래스의 풀경로를 적는다.-->
<!--namespace의 값으로는 이 파일과 연동될 인터페이스의 전체 경로(패키지명 포함 클래스명)를 적는다.-->
<mapper namespace="com.spring.mvc.chap05.mapper.BoardMapper">
    <!-- 구현하고자 하는 인터페이스에 명세된 추상메서드별로 sql을 작성한다. -->
    <!-- id에는 추상 메서드명을 적는다.    -->
    <!-- SQL 작성할 때 값을 전달하는 방법은
        1. 추상 메서드를 보고 어떤 타입의 값이 전달되는지 확인.
        2. 값이 만약 객체라면, 객체 내부의 필드 값을 꺼내기 위해 필드명을 지목. (get 안붙인다)
        3. 단일 값(기본 타입)이라면 매개변수명으로 지목 -->
    <insert id="save">
        INSERT INTO tbl_board
        (title, content, writer)
        VALUES (#{title}, #{content}, #{writer})
    </insert>

    <delete id="delete">
        DELETE FROM tbl_board
        WHERE board_no = #{boardNo}
    </delete>

    <update id="updateViewCount">
        UPDATE tbl_board
        SET view_count = view_count + 1
        WHERE board_no = #{bno}
    </update>

    <!-- resultType에는 하기 sql문 실행시 반환되는 타입을 작성해주어야 하는데,
        List는 작성하지 않아도 된다. 여러 개의 Board객체가 반환되면 자동으로 List라는 것을 인식하기 때문이다.

        SELECT의 경우에는 반환되는 타입을 작성해 주어야 한다.
        resultType을 통해 리턴되는 객체의 타입을 얘기해준다.
        데이터베이스의 컬럼명과 엔터티의 필드명이 동일해야 한다.
        (스네이크 케이스 -> 카멜케이스 변환은 따로 설정을 통해 처리)
        ex) board_no : boardNo (o) board_num : bnum(x)

        resultType에 List를 따로 언급할 필요가 없습니다.
        -->
<!--  mybatis-config.xml에 typeAlias 설정 안했을 경우, 경로를 풀 네임으로 작성해야 한다.  -->
<!--    <select id="findAll" resultType="com.spring.mvc.chap05.entity.Board">-->
    <select id="findAll" resultType="board">
        SELECT * FROM tbl_board
        ORDER BY board_no DESC
        LIMIT #{pageStart}, #{amount}
    </select>

    <select id="findOne" resultType="board">
        SELECT * FROM tbl_board
        WHERE board_no = #{boardNo}
    </select>

</mapper>